{"version":3,"file":"index.es.js","sources":["../src/api/getProduct/index.ts","../src/api/getCategory/index.ts","../src/api/getBlogPosts/index.ts","../src/api/customerMutations/buildMutations.ts","../src/api/editProfile/index.ts","../src/api/createCart/index.ts","../src/api/addToCart/index.ts","../src/api/signUp/index.ts","../src/api/signIn/index.ts","../src/api/signOut/index.ts","../src/api/changePassword/index.ts","../src/api/customerMutations/buildQueries.ts","../src/api/fetchCustomer/index.ts","../src/api/fetchOrders/index.ts","../src/api/fetchAddresses/index.ts","../src/fragments/index.ts","../src/api/getMe/defaultQuery.ts","../src/helpers/queries/index.ts","../src/api/getMe/index.ts","../src/helpers/utils.ts","../src/api/isGuest/index.ts","../src/api/checkOut/index.ts","../src/types/Api.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function getProduct(\n  context,\n  params,\n  customQuery?: CustomQuery\n) {\n  if (params.slug) {\n    const getProductByHandleQuery = context.client.graphQLClient.query(\n      (root) => {\n        root.add(\n          'productByHandle',\n          { args: { handle: params.slug } },\n          (productByHandle) => {\n            // get product basic information\n            productByHandle.add('id');\n            productByHandle.add('title');\n            productByHandle.add('description');\n            productByHandle.add('descriptionHtml');\n            productByHandle.add('handle');\n            productByHandle.add('tags');\n            productByHandle.add('availableForSale');\n            productByHandle.add('totalInventory');\n            productByHandle.add('vendor');\n\n            productByHandle.add('options', {}, (options) => {\n              options.add('name');\n              options.add('values');\n            });\n\n            productByHandle.addConnection(\n              'images',\n              { args: { first: 20 } },\n              (image) => {\n                image.add('id');\n                image.add('altText');\n                image.add('originalSrc');\n                image.add('transformedSrc');\n              }\n            );\n\n            productByHandle.addConnection(\n              'variants',\n              { args: { first: 20 } },\n              (variants) => {\n                variants.add('title');\n                variants.add('price');\n                variants.add('weight');\n                variants.add('available');\n                variants.add('sku');\n                variants.add('compareAtPrice');\n\n                variants.addField('image', { args: {} }, (image) => {\n                  image.add('id');\n                  image.add('altText');\n                  image.add('originalSrc');\n                  image.add('transformedSrc');\n                });\n\n                variants.addField('selectedOptions', {}, (selectedOptions) => {\n                  selectedOptions.add('name');\n                  selectedOptions.add('value');\n                });\n\n                variants.addField('product', {}, (product) => {\n                  product.add('id');\n                  product.add('title');\n                  product.add('availableForSale');\n                  product.add('handle');\n                  product.add('description');\n                  product.add('descriptionHtml');\n                  product.addConnection(\n                    'images',\n                    { args: { first: 20 } },\n                    (images) => {\n                      images.add('id');\n                      images.add('altText');\n                      images.add('originalSrc');\n                      images.add('transformedSrc');\n                    }\n                  );\n                  product.add('productType');\n                  product.addField('options', {}, (options) => {\n                    options.add('name');\n                    options.add('values');\n                  });\n                });\n              }\n            );\n          }\n        );\n      }\n    );\n    return context.client.graphQLClient\n      .send(getProductByHandleQuery)\n      .then(({ model, product }) => {\n        if (model) {\n          return model.productByHandle;\n        }\n      });\n\n    // return await context.client.product.fetch(params.id).then((products) => {\n    // return products;\n    // });\n  } else if (params.sort) {\n    return await context.client.product\n      .fetchQuery({ first: 20, sortKey: 'TITLE', reverse: false })\n      .then((products) => {\n        return products;\n      });\n  } else {\n    // Use the built-in function\n    return await context.client.product.fetchAll().then((products) => {\n      return products;\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function getCategory(context, params, customQuery?: CustomQuery) {\n  // Use the built-in function\n  if (params.slug !== '') {\n    return context.client.collection.fetchByHandle(params.slug).then((collection) => {\n      // Collection with all default fields\n      return collection;\n    });\n  } else {\n    return context.client.collection.fetchAll().then((collection) => {\n      // Collection with all default fields\n      return collection;\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function getBlogPosts(context, params, customQuery?: CustomQuery) {\n  // Use the built-in function\n  const articlesQuery = context.client.graphQLClient.query((root) => {\n    root.addConnection('articles', { args: { first: 20 } }, (article) => {\n      article.add('title');\n      article.add('handle');\n      article.add('url');\n      article.add('excerpt');\n      article.add('publishedAt');\n      article.addField('image', {}, (image) => {\n        image.add('id');\n        image.add('altText');\n        image.add('originalSrc');\n      });\n      article.addField('authorV2', {}, (author) => {\n        author.add('name');\n        author.add('email');\n      });\n    });\n  });\n  // Call the send method with the custom query\n  context.client.graphQLClient.send(articlesQuery).then(({ model, articles }) => {\n    if (model) {\n      return model.articles;\n    }\n  });\n}\n","/* TODO: Fetch custom client directly, may be using context  */\nconst changePasswordMutation: (context) => any = (context): any => {\n  const customerAccessToken = context.client.graphQLClient.variable('customerAccessToken', 'String!');\n  const customer = context.client.graphQLClient.variable('customer', 'CustomerUpdateInput!');\n\n  return context.client.graphQLClient.mutation('customerUpdate', [customerAccessToken, customer], (root) => {\n    root.add('customerUpdate', {args: {customerAccessToken, customer}}, (customer) => {\n      customer.add('customer', (fields) => {\n        fields.add('id');\n        fields.add('displayName');\n        fields.add('email');\n        fields.add('firstName');\n        fields.add('lastName');\n        fields.add('phone');\n      });\n      customer.add('customerAccessToken', (token) => {\n        token.add('accessToken');\n        token.add('expiresAt');\n      });\n      customer.add('customerUserErrors', (error) => {\n        error.add('code');\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nconst forgotPasswordMutation: (context) => any = (context): any => {\n\n  const email = context.client.graphQLClient.variable('email', 'String!');\n\n  return context.client.graphQLClient.mutation('customerRecover', [email], (root) => {\n    root.add('customerRecover', {args: {email}}, (customer) => {\n      customer.add('customerUserErrors', (error) => {\n        error.add('code');\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nconst editProfileMutation: (context) => any = (context): any => {\n  const customerAccessToken = context.client.graphQLClient.variable('customerAccessToken', 'String!');\n  const customer = context.client.graphQLClient.variable('customer', 'CustomerUpdateInput!');\n\n  return context.client.graphQLClient.mutation('customerUpdate', [customerAccessToken, customer], (root) => {\n    root.add('customerUpdate', {args: {customerAccessToken, customer}}, (customer) => {\n      customer.add('customer', (fields) => {\n        fields.add('id');\n        fields.add('displayName');\n        fields.add('email');\n        fields.add('firstName');\n        fields.add('lastName');\n        fields.add('phone');\n      });\n      customer.add('customerAccessToken', (token) => {\n        token.add('accessToken');\n        token.add('expiresAt');\n      });\n      customer.add('customerUserErrors', (error) => {\n        error.add('code');\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nconst signInMutation: (context) => any = (context): any => {\n  const input = context.client.graphQLClient.variable('input', 'CustomerAccessTokenCreateInput!');\n\n  return context.client.graphQLClient.mutation('customerAccessTokenCreate', [input], (root) => {\n    root.add('customerAccessTokenCreate', {args: {input}}, (customer) => {\n      customer.add('customerAccessToken', (token) => {\n        token.add('accessToken');\n        token.add('expiresAt');\n      });\n      customer.add('customerUserErrors', (error) => {\n        error.add('code');\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nconst signOutMutation: (context) => any = (context): any => {\n\n  const customerAccessToken = context.client.graphQLClient.variable('customerAccessToken', 'String!');\n\n  return context.client.graphQLClient.mutation('customerAccessTokenDelete', [customerAccessToken], (root) => {\n    root.add('customerAccessTokenDelete', {args: {customerAccessToken}}, (customer) => {\n      customer.add('deletedAccessToken');\n      customer.add('deletedCustomerAccessTokenId');\n      customer.add('userErrors', (error) => {\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nconst signUpMutation: (context) => any = (context): any => {\n\n  const input = context.client.graphQLClient.variable('input', 'CustomerCreateInput!');\n\n  return context.client.graphQLClient.mutation('customerCreate', [input], (root) => {\n    root.add('customerCreate', {args: {input}}, (customer) => {\n      customer.add('customer', (token) => {\n        token.add('id');\n      });\n      customer.add('customerUserErrors', (error) => {\n        error.add('code');\n        error.add('field');\n        error.add('message');\n      });\n    });\n  });\n};\n\nexport {\n  changePasswordMutation,\n  forgotPasswordMutation,\n  editProfileMutation,\n  signInMutation,\n  signOutMutation,\n  signUpMutation\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { editProfileMutation as mutation } from './../customerMutations/buildMutations';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function editProfile(context, params) {\n  const { token, profile } = params;\n  const data = {\n    customerAccessToken: token,\n    customer: profile\n  };\n  // send user data to authenticate, return token if valid\n  return await context.client.graphQLClient.send(mutation(context), data).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function createCart(context, _params, _customQuery?: CustomQuery) {\n  // initiate the cart\n  return await context.client.checkout.create().then((checkout) => {\n    // return checkOut ID\n    return checkout.id;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function addToCart(context, params, _customQuery?: CustomQuery) {\n  const { currentCart, product, quantity } = params;\n  // Existing Checkout ID\n  const checkoutID = currentCart.id;\n  // Items to be add to cart\n  const lineItemsToAdd = [{\n    variantId: product.variantId,\n    quantity: quantity\n  }];\n\n  // Add an item to the checkout\n  return await context.client.checkout.addLineItems(checkoutID, lineItemsToAdd).then((checkout) => checkout);\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\nimport { signUpMutation as mutation } from './../customerMutations/buildMutations';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function signUp(context, params, customQuery?: CustomQuery) {\n  const data = {\n    input: params\n  };\n\n  // send userdata to register\n  return await context.client.graphQLClient.send(mutation(context), data).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\nimport { signInMutation as mutation } from './../customerMutations/buildMutations';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function signIn(context, params, customQuery?: CustomQuery) {\n  const { username, password } = params;\n  const data = {\n    input: {\n      email: username,\n      password: password\n    }\n  };\n  // send user data to authenticate, return token if valid\n  return await context.client.graphQLClient.send(mutation(context), data).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { signOutMutation as mutation } from './../customerMutations/buildMutations';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function signOut(context, params) {\n  const data = {\n    customerAccessToken: params\n  };\n\n  // Remove customer access token\n  return await context.client.graphQLClient.send(mutation(context), data).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { changePasswordMutation as mutation } from './../customerMutations/buildMutations';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function changePassword(context, params) {\n  const { token, newPassword } = params;\n  const data = {\n    customerAccessToken: token,\n    customer: {\n      password: newPassword\n    }\n  };\n\n  // Remove customer access token\n  return await context.client.graphQLClient.send(mutation(context), data).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable func-names */\nconst customerQuery: (token: string, context) => any = (token, context): any => {\n\n  return context.client.graphQLClient.query((root) => {\n    root.add('customer', {\n      args: {\n        customerAccessToken: token\n      }\n    }, (customer) => {\n      customer.add('id');\n      customer.add('displayName');\n      customer.add('email');\n      customer.add('firstName');\n      customer.add('lastName');\n      customer.add('phone');\n      customer.add('lastIncompleteCheckout', function (lcheckout) {\n        lcheckout.add('id');\n      });\n    });\n  });\n};\n\nconst ordersQuery: (pages: number, token: string, context) => any = (pages, token, context): any => {\n\n  return context.client.graphQLClient.query((root) => {\n    root.add('customer', {\n      args: {\n        customerAccessToken: token\n      }\n    }, (customer) => {\n      customer.add('id');\n      customer.addConnection('orders', {args: {first: pages}}, (order) => {\n        order.add('name');\n        order.add('orderNumber');\n        order.add('processedAt');\n        order.add('financialStatus');\n        order.add('fulfillmentStatus');\n        order.add('currentTotalPrice', function (price) {\n          price.add('amount');\n          price.add('currencyCode');\n        });\n        order.add('currentTotalTax', function (tax) {\n          tax.add('amount');\n          tax.add('currencyCode');\n        });\n        order.add('currentSubtotalPrice', function (subtotal) {\n          subtotal.add('amount');\n          subtotal.add('currencyCode');\n        });\n        order.addConnection('lineItems', {args: {first: 100}}, function (item) {\n          item.add('title');\n          item.add('quantity');\n          item.add('currentQuantity');\n          item.add('originalTotalPrice', function (price) {\n            price.add('amount');\n            price.add('currencyCode');\n          });\n          item.add('variant', function (price) {\n            price.add('sku');\n            price.add('title');\n            price.add('product', function (handle) {\n              handle.add('handle');\n            });\n\n          });\n        });\n      });\n    });\n  });\n};\n\nconst addressesQuery: (pages: number, token: string, context) => any = (pages, token, context): any => {\n\n  return context.client.graphQLClient.query((root) => {\n    root.add('customer', {\n      args: {\n        customerAccessToken: token\n      }\n    }, (customer) => {\n      customer.add('id');\n      customer.addConnection('addresses', {args: {first: 10}}, function (address) {\n        address.add('address1');\n        address.add('address2');\n        address.add('city');\n        address.add('company');\n        address.add('firstName');\n        address.add('lastName');\n        address.add('name');\n        address.add('phone');\n        address.add('province');\n        address.add('provinceCode');\n        address.add('zip');\n        address.add('formattedArea');\n      });\n    });\n  });\n};\n\nexport {\n  customerQuery,\n  ordersQuery,\n  addressesQuery\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\nimport { customerQuery as query } from './../customerMutations/buildQueries';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function fetchCustomer(context, params, customQuery?: CustomQuery) {\n  // send user data to authenticate, return token if valid\n  return await context.client.graphQLClient.send(query(params, context)).then(({model}) => {\n    return model;\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\nimport { ordersQuery as query } from './../customerMutations/buildQueries';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function fetchOrders(context, params, customQuery?: CustomQuery) {\n// send user data to authenticate, return token if valid\n  const orders = await context.client.graphQLClient.send(query(10, params, context)).then(({model}) => {\n    return model;\n  });\n\n  return orders;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\nimport { addressesQuery as query } from './../customerMutations/buildQueries';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function fetchAddresses(context, params, customQuery?: CustomQuery) {\n// send user data to authenticate, return token if valid\n  const addresses = await context.client.graphQLClient.send(query(10, params, context)).then(({model}) => {\n    if (model) {\n      return model.customer;\n    }\n  });\n  return addresses;\n}\n","export const ProductPriceFragment = `\n  fragment DefaultProductPrice on ProductPrice {\n    discounted {\n      value {\n        type\n        currencyCode\n        centAmount\n        fractionDigits\n      }\n      discount {\n        validFrom\n        validUntil\n        isActive\n        name(acceptLanguage: $acceptLanguage)\n      }\n    }\n    value {\n      type\n      currencyCode\n      centAmount\n      fractionDigits\n    }\n  }\n`;\n\nexport const AddressFragment = `\n  fragment DefaultAddress on Address {\n    id\n    title\n    firstName\n    lastName\n    streetName\n    streetNumber\n    postalCode\n    city\n    country\n    state\n    region\n    company\n    apartment\n    phone\n    mobile\n  }\n`;\n\n// TODO: Remove all address information and update PRO packages to use customQueries when this is implemented: https://github.com/DivanteLtd/vue-storefront/issues/5049\nexport const CustomerFragment = `\n  ${AddressFragment}\n  fragment DefaultCustomer on Customer {\n    version\n    firstName\n    lastName\n    email\n    addresses {\n      id\n    }\n    shippingAddresses {\n      ...DefaultAddress\n    }\n    billingAddresses {\n      ...DefaultAddress\n    }\n    defaultBillingAddressId\n    defaultShippingAddressId\n  }\n`;\n\nexport const LineItemFragment = `\n  ${ProductPriceFragment}\n  fragment DefaultLineItem on LineItem {\n    id\n    productId\n    name(acceptLanguage: $acceptLanguage)\n    productSlug(acceptLanguage: $acceptLanguage)\n    quantity\n    discountedPricePerQuantity {\n      quantity\n      discountedPrice {\n        value {\n          centAmount\n        }\n        includedDiscounts {\n          discount {\n            name(acceptLanguage: $acceptLanguage)\n            isActive\n          }\n        }\n      }\n    }\n    variant {\n      id\n      sku\n      price(currency: \"USD\") {\n        tiers {\n          value {\n            centAmount\n          }\n        }\n        value {\n          centAmount\n        }\n        discounted {\n          value {\n            centAmount\n          }\n          discount {\n            isActive\n            name(acceptLanguage: $acceptLanguage)\n          }\n        }\n      }\n      images {\n        url\n        label\n      }\n      attributesRaw {\n        name\n        value\n        attributeDefinition {\n          type {\n            name\n          }\n          label(locale: $locale)\n        }\n      }\n    }\n    price {\n      ...DefaultProductPrice\n    }\n  }\n`;\n\nexport const ShippingMethodFragment = `\n  fragment DefaultShippingMethod on ShippingMethod {\n    id\n    version\n    name\n    description\n    isDefault\n    localizedDescription(acceptLanguage: $acceptLanguage)\n    zoneRates {\n      zone {\n        id\n        name\n      }\n      shippingRates {\n        freeAbove {\n          type\n          centAmount\n        }\n        isMatching\n        price {\n          centAmount\n        }\n      }\n    }\n  }\n`;\n\nexport const CartFragment = `\n  ${AddressFragment}\n  ${CustomerFragment}\n  ${LineItemFragment}\n  ${ShippingMethodFragment}\n  fragment DefaultCart on Cart {\n    id\n    customerId\n    customerEmail\n    lineItems {\n      ...DefaultLineItem\n    }\n    totalPrice {\n      centAmount\n    }\n    shippingAddress {\n      ...DefaultAddress\n    }\n    billingAddress {\n      ...DefaultAddress\n    }\n    customer {\n      ...DefaultCustomer\n    }\n    totalPrice {\n      centAmount\n    }\n    taxedPrice {\n      totalNet {\n        centAmount\n      }\n      totalGross {\n        centAmount\n      }\n    }\n    paymentInfo {\n      payments {\n        id\n      }\n    }\n    shippingInfo {\n      price {\n        centAmount\n      }\n      shippingMethod {\n        ...DefaultShippingMethod\n      }\n    }\n    discountCodes {\n      discountCode {\n        id\n        code\n        isActive\n        validFrom\n        validUntil\n        name(acceptLanguage: $acceptLanguage)\n      }\n    }\n    refusedGifts {\n      isActive\n      validFrom\n      validUntil\n      name(acceptLanguage: $acceptLanguage)\n    }\n    custom {\n      customFieldsRaw {\n        name\n        value\n      }\n    }\n    cartState\n    version\n  }\n`;\n\nexport const OrderFragment = `\n  ${AddressFragment}\n  ${LineItemFragment}\n  fragment DefaultOrder on Order {\n    lineItems {\n      ...DefaultLineItem\n    }\n    totalPrice {\n      centAmount\n    }\n    orderState\n    id\n    orderNumber\n    version\n    createdAt\n    customerEmail\n    shipmentState\n    paymentState\n    shippingAddress {\n      ...DefaultAddress\n    }\n    billingAddress {\n      ...DefaultAddress\n    }\n    cart {\n      id\n      version\n    }\n  }\n`;\n","import gql from 'graphql-tag';\nimport { CartFragment, CustomerFragment } from './../../fragments';\n\nconst basicProfile = gql`\n  ${CartFragment}\n\n  query getMe($locale: Locale!) {\n    me {\n      activeCart {\n        ...DefaultCart\n      }\n    }\n  }\n`;\n\nconst fullProfile = gql`\n  ${CartFragment}\n  ${CustomerFragment}\n\n  query getMe($locale: Locale!) {\n    me {\n      activeCart {\n        ...DefaultCart\n      }\n      customer {\n        ...DefaultCustomer\n      }\n    }\n  }\n`;\n\nexport { basicProfile, fullProfile };\n","import { CustomQueryFn } from './../../types/Api';\n\nconst getCustomQuery = <T = any>(customQueryFn: CustomQueryFn<T>, params) => {\n  const { defaultQuery, defaultVariables } = params;\n  if (customQueryFn) {\n    const { query, variables } = customQueryFn(defaultQuery, defaultVariables);\n    return {\n      query: query || defaultQuery,\n      variables: variables || defaultVariables};\n  }\n  return { query: defaultQuery, variables: defaultVariables };\n};\n\nexport { getCustomQuery };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQueryFn } from '../../index';\nimport { basicProfile, fullProfile } from './defaultQuery';\nimport { getCustomQuery } from '../../helpers/queries';\n\nexport interface GetMeParams {\n  customer?: boolean;\n}\n\nexport interface OrdersData {\n  // TODO: When https://github.com/DivanteLtd/vue-storefront/issues/4900 is finished, please change \"me: any\" to \"me: Pick<MeQueryInterface, \"activeCart\" | \"customer\">\"\n  me: any;\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst getMe = async ({ config, client }, params: GetMeParams = {}, customQueryFn?: CustomQueryFn) => {\n  const { locale, acceptLanguage } = config;\n\n  const { customer }: GetMeParams = params;\n  const defaultQuery = customer ? fullProfile : basicProfile;\n  const defaultVariables = {\n    locale,\n    acceptLanguage\n  };\n  const { query, variables } = getCustomQuery(customQueryFn, { defaultQuery, defaultVariables });\n  return {};\n};\n\nexport default getMe;\n","export const isAnonymousSession = (token) => token?.scope?.includes('anonymous_id');\nexport const isUserSession = (token) => token?.scope?.includes('customer_id');\nexport const getAccessToken = (token) => token ? token.access_token : null;\n","import { isAnonymousSession, isUserSession } from '../../helpers/utils';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst isGuest = (context) => {\n  const { client, config } = context;\n  if (config.handleIsGuest) {\n    return config.handleIsGuest(context);\n  }\n\n  if (client.tokenProvider || context.isProxy) {\n    const token = config.auth.onTokenRead();\n    return !isAnonymousSession(token) && !isUserSession(token);\n  }\n\n  return false;\n};\n\nexport default isGuest;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CustomQuery } from '@vue-storefront/core';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default async function checkOut(context, checkoutId, customQuery?: CustomQuery) {\n  return context.client.checkout.fetch(checkoutId);\n}\n","/* eslint-disable no-use-before-define */\nimport { GetMeParams } from '../api/getMe';\n// import { ShippingMethodData } from '../api/getShippingMethods';\nimport {\n  Cart,\n  // Order,\n  // ShippingMethod,\n  // CustomerSignInResult,\n  // Customer,\n  CartDraft,\n  ProductVariant,\n  // OrderMyCartCommand,\n  // CustomerSignMeInDraft,\n  // CustomerSignMeUpDraft,\n  // ReferenceInput,\n  // Address,\n  // LineItem,\n  // CategoryQueryResult,\n  // ProductQueryResult,\n  // Me,\n  CartQueryInterface\n} from './graphQL';\n\nexport interface ApiInstance {\n  addToCart ({ id, version }: Cart, product: ProductVariant, quantity: number, customQuery?: CustomQueryFn);\n  // applyCartCoupon (cart: Cart, discountCode: string, customQuery?: CustomQueryFn): Promise<CartResponse>;\n  createCart (cartDraft?: CartData, customQueryFn?: CustomQueryFn): Promise<{ data: CartQueryInterface }>;\n  // createMyOrderFromCart (draft: OrderMyCartCommand, customQueryFn?: CustomQueryFn): Promise<OrderMutationResponse>;\n  // customerChangeMyPassword (version: any, currentPassword: string, newPassword: string): Promise<ChangeMyPasswordResponse>;\n  // customerSignMeIn (draft: CustomerSignMeInDraft): Promise<SignInResponse>;\n  // customerSignMeUp (draft: CustomerSignMeUpDraft): Promise<SignInResponse>;\n  // customerSignOut (): Promise<void>;\n  // customerUpdateMe (currentUser, updatedUserData): Promise<any>;\n  getCart(cartId: string);\n  getCategory(params, customQueryFn?: CustomQueryFn);\n  getMe (params?: GetMeParams, customQueryFn?: CustomQueryFn);\n  // getOrders (params, customQueryFn?: CustomQueryFn): Promise<{ data: { me: Me } }>;\n  getProduct (params, customQueryFn?: CustomQueryFn);\n  // getShippingMethods (cartId?: string, customQueryFn?: CustomQueryFn): Promise<ShippingMethodData>;\n  // removeCartCoupon (cart: Cart, discountCode: ReferenceInput, customQuery?: CustomQueryFn): Promise<CartResponse>;\n  // removeFromCart (cart: Cart, product: LineItem, customQuery?: CustomQueryFn): Promise<CartResponse>;\n  // updateCart (params: UpdateCartParams, customQueryFn?: CustomQueryFn): Promise<CartResponse>;\n  // updateCartQuantity (cart: Cart, product: LineItem, customQuery?: CustomQueryFn): Promise<CartResponse>;\n  // updateShippingDetails (cart: Cart, shippingDetails: Address, customQueryFn?: CustomQueryFn): Promise<CartResponse>;\n  isGuest: () => boolean;\n}\n\nexport type CustomQueryFn<T = any> = (query: any, variables: T) => {\n  query?: any;\n  variables?: T;\n};\n\nexport interface BaseSearch {\n  limit?: number;\n  offset?: number;\n  sort?: string[];\n}\n\nexport interface ProductWhereSearch extends BaseSearch {\n  catId?: string | string[];\n  skus?: string[];\n  slug?: string;\n  id?: string;\n  filters?: Filter[];\n}\n\nexport interface Filter {\n  type: AttributeType;\n  name: string;\n  value: any;\n}\n\nexport interface FilterOption {\n  label: string;\n  value: string | number | boolean | [number, number] | [string, string];\n  selected: boolean;\n}\n\nexport interface CategoryWhereSearch extends BaseSearch {\n  catId?: string;\n  slug?: string;\n}\n\nexport interface OrderWhereSearch extends BaseSearch {\n  id?: string;\n}\n\nexport enum AttributeType {\n  STRING = 'StringAttribute',\n  DATE = 'DateAttribute',\n  DATETIME = 'DateTimeAttribute',\n  TIME = 'TimeAttribute',\n  NUMBER = 'NumberAttribute',\n  ENUM = 'EnumAttribute',\n  LOCALIZED_ENUM = 'LocalizedEnumAttribute',\n  LOCALIZED_STRING = 'LocalizedStringAttribute',\n  MONEY = 'MoneyAttribute',\n  BOOLEAN = 'BooleanAttribute'\n}\n\nexport interface CartData extends Omit<CartDraft, 'currency'> {\n  currency?: string;\n}\n","import { /* webpackChunkName: 'apiClientFactory' */ apiClientFactory } from '@vue-storefront/core';\nimport getProduct from './api/getProduct';\nimport getCategory from './api/getCategory';\nimport getBlogPosts from './api/getBlogPosts';\nimport editProfile from './api/editProfile';\nimport createCart from './api/createCart';\nimport addToCart from './api/addToCart';\nimport signUp from './api/signUp';\nimport signIn from './api/signIn';\nimport signOut from './api/signOut';\nimport changePassword from './api/changePassword';\nimport fetchCustomer from './api/fetchCustomer';\nimport fetchOrders from './api/fetchOrders';\nimport fetchAddresses from './api/fetchAddresses';\nimport getMe from './api/getMe';\nimport isGuest from './api/isGuest';\nimport checkOut from './api/checkOut';\n\nconst CustomClient = require('shopify-buy/index.unoptimized.umd.min.js');\nconst defaultSettings = {};\nconst cookies = {\n  cartCookieName: 'vsf-cart'\n};\n\nconst onSetup = (settings) => {\n  return ({\n    config: {\n      ...defaultSettings,\n      ...settings\n    },\n    client: CustomClient.buildClient(settings.api),\n    cookies: (settings.api).cookies || cookies\n  });\n};\n\nconst { createApiClient } = apiClientFactory<any, any>({\n  tag: 'shopify',\n  onSetup,\n  api: {\n    getProduct,\n    getCategory,\n    getBlogPosts,\n    editProfile,\n    addToCart,\n    isGuest,\n    getMe,\n    signUp,\n    signIn,\n    signOut,\n    changePassword,\n    fetchCustomer,\n    fetchOrders,\n    fetchAddresses,\n    createCart,\n    checkOut,\n    cookies\n  }\n});\n\nexport {\n  createApiClient\n};\n\nexport * from './types';\nexport * from './fragments';\nexport * from './types/Api';\nexport * from './helpers/queries';\n\n"],"names":["mutation","query"],"mappings":"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"}